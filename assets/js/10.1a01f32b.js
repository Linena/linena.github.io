(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{409:function(n,e,s){"use strict";s.r(e);var t=s(55),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("Dockerfile")]),n._v(" "),s("ul",[s("li",[n._v("from")]),n._v(" "),s("li",[n._v("label")]),n._v(" "),s("li",[n._v("run 执行命令并创建新的image layer")]),n._v(" "),s("li",[n._v("workdir 除了设置文件目录")]),n._v(" "),s("li",[n._v("add 添加并解压")]),n._v(" "),s("li",[n._v("copy 复制文件")]),n._v(" "),s("li",[n._v("env")]),n._v(" "),s("li",[n._v("volume")]),n._v(" "),s("li",[n._v("network")]),n._v(" "),s("li",[n._v("cmd 设置容器"),s("strong",[n._v("启动后")]),n._v("执行的命令")]),n._v(" "),s("li",[n._v("entrypoint 设置同期"),s("strong",[n._v("启动时")]),n._v("运行的命令")])]),n._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("FROM")]),n._v(" centos")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("LABEL")]),n._v(" author=orangbus")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("RUN")]),n._v(" yum install -y vim")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("WORKDIR")]),n._v(" /home/Code")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("ENV")]),n._v(" PHP_VERSION 7.4")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("RUN")]),n._v(" yum install -y mysql-server="),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"${PHP_VERSION}"')])]),n._v("\n")])])]),s("p",[s("strong",[n._v("shell:")]),n._v(" entrypoint echo $name")]),n._v(" "),s("p",[s("strong",[n._v("exec:")]),n._v('  entrypoint ["/bin/bash","-c","echo $name"]')]),n._v(" "),s("p",[n._v("删除退出的容器")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("docker rm $(docker ps -qa)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('## emby \nEMBY_IMAGE=emby/embyserver\nEMBY_HTTP_PORT=8085\nEMBY_HTTPS_PORT=8086\nEMBY_CONFIG_PATH=./emby/config\nEMBY_SHAREDIR_PATH=./emby/gd\n\n# emby\n    emby:\n      container_name: emby\n      image: ${EMBY_IMAGE}\n      restart: always\n      ports:\n      - "${EMBY_HTTP_PORT}:8096"\n      - "${EMBY_HTTPS_PORT}:8920"\n      environment:\n        UID: 1000\n        GID: 100\n        GIDLIST: 100\n        DEVICE: /dev/dri:/dev/dri\n        RUNTIME: nvidia\n      volumes:\n      - ${EMBY_CONFIG_PATH}:/config\n      - ${EMBY_SHAREDIR_PATH}:/mnt/gd\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);